;; Utilitary functions

int workchain() asm "0 PUSHINT";


() force_chain(slice addr) impure {
  (int wc, _) = parse_std_addr(addr);
  throw_unless(333, wc == workchain());
}


builder store_nullable_msg_addr(builder b, slice s) impure {
  b = null?(s) ? b.store_uint(0, 2) : b.store_slice(s);
  return b;
}


cell calculate_signature_stateinit(slice provider_address, slice item_address, slice signee_address, cell code) {
  cell data = begin_cell()
                .store_slice(item_address)
                .store_slice(signee_address)
                .store_slice(provider_address)
              .end_cell();
  return begin_cell()
          .store_uint(0, 2)
          .store_dict(code)
          .store_dict(data)
          .store_uint(0, 1)
        .end_cell();
}


slice get_address_by_stateinit(int wc, cell state_init) {
  return begin_cell()
          .store_uint(4, 3)
          .store_int(wc, 8)
          .store_uint(cell_hash(state_init), 256)
        .end_cell()
        .begin_parse();
}
